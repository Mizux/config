# Read File Into Vector
snippet readfile
	std::vector<char> v;
	if (FILE *${2:fp} = fopen(${1:"filename"}, "r")) {
		char buf[1024];
		while (size_t len = fread(buf, 1, sizeof(buf), $2))
			v.insert(v.end(), buf, buf + len);
		fclose($2);
	}${3}
# std::map
snippet map
	std::map<${1:key}, ${2:value}> map${3};
# std::vector
snippet vector
	std::vector<${1:char}> vec${2};
# Namespace
snippet ns
	namespace ${1:`Filename('', 'my')`}
	{
		${2}
	} // $1
# Class
snippet cl
	//! @class $1
	class ${1:`Filename('$1_t', 'name')`}
	{
		public:
			//! @brief Constructor.
			$1(${2:arguments});
	
			//! @brief Destructor.
			virtual ~$1();
	
		private:
			${3:// variable}
	};
snippet fori
	for (int ${1:iLoop} =0; $1 < ${2:count}; $1${3:++})
	{
		${4:// code}
	}
snippet forui
	for (unsigned int ${1:uiLoop} =0; $1 < ${2:count}; $1${3:++})
	{
		${4:// code}
	}
snippet cerr
	std::cerr << "${1:plop}" << std::endl;${2}
snippet cout
	std::cout << "${1:plop}" << std::endl;${2}
snippet endl
	std::endl${1}

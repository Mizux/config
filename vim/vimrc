set nocompatible " be iMproved, required
set mouse=a " Use mouse in vim
filetype off " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'gmarik/Vundle.vim' " let Vundle manage Vundle, required
Plugin 'Valloric/YouCompleteMe' " A code-completion engine
Plugin 'scrooloose/syntastic' " Syntax checking hacks
Plugin 'majutsushi/tagbar' " displays tags in a window, ordered by scope
Plugin 'jlanzarotta/bufexplorer' " convenient buffer explorer
Plugin 'tpope/vim-fugitive' " a Git wrapper so awesome
Plugin 'mhinz/vim-signify' " show a VCS diff using sign colum
Plugin 'airblade/vim-gitgutter' " shows a git diff/stage/revert using sign column
Plugin 'bling/vim-airline' " lean & mean status/tabline
Plugin 'git://git.wincent.com/command-t.git' " fast, intuitive mechanism for opening files
Plugin 'rstacruz/sparkup', {'rtp': 'vim/'} " A parser for a condensed HTML format
Plugin 'flazz/vim-colorschemes' " one colorscheme pack to rule them all!
call vundle#end() " required
filetype plugin indent on " required
" :PluginInstall - installs plugins; append `!` to update or just :PluginUpdate

colorscheme mustang | set background=dark | set guifont=DejaVu\ Sans\ Mono\ 8
set number | set cursorline | set textwidth=80
syntax on | set showmatch | set hlsearch | set ignorecase | set smartcase
set autoindent | set smartindent | set tabstop=4 | set shiftwidth=4 "| set expandtab
set foldmethod=syntax | set foldlevelstart=99 | set foldenable
let g:xml_syntax_folding=1
set ssop-=options | set ssop-=folds

" Remove trailing whitespace
function! CleanWhiteSpace()
  " Don't strip on these filetypes
  if &ft =~ 'markdown\|perl'
    return
  endif
  let _s=@/
  let l = line(".")
  let c = col(".")
  :%s/\s\+$//e
  let @/=_s
  call cursor(l, c)
endfunction()
" Remove trailing whitespaces when saving:
autocmd bufwritepre * call CleanWhiteSpace()

nmap <silent> <c-n> :Explore<cr> " open TreeExplorer
nmap <silent> <c-t> :TagbarToggle<cr> " open TagBar
nmap <silent> <c-b> :BufExplorer<cr> " open BufExplorer

" CTags Completion (C-F8 generate)
set tags=./tags;
map <C-F8> :!ctags -R --sort=yes --c++-kinds=+pl --fields=+iaS --extra=+q .<CR>
" NerdTree style
let g:netrw_liststyle=3
" load Doxygen syntax per default
au BufNewFile,BufRead *.dox set filetype=doxygen
let g:load_doxygen_syntax = 1
let g:doxygen_enhanced_colour = 0
let doxygen_my_rendering = 0
let doxygen_javadoc_autobrief = 1
let doxygen_end_punctuation = '[.]'
